import processing.core.PApplet;
import processing.core.PVector;


public abstract class Terrain extends Component
{	
	enum Corner {TOP_LEFT, TOP_RIGHT, BOTTOM_LEFT, BOTTOM_RIGHT, CENTER, NONE};

	Corner grabbed;

	PApplet parent;
	
	PVector position;
	PVector oldMousePosition;
	
	Grid grid;

	Terrain(PApplet _parent, Grid _grid, PVector _position)
	{
		parent = _parent;
		grid = _grid;
		position = _position;
		grabbed = Corner.NONE;
		oldMousePosition = new PVector(-1, -1);
		
		snapTo();
	}
	
	void update()
	{
		// Reset if we let go of mouse
		if(!parent.mousePressed)
			grabbed = Corner.NONE;
		else if(grabbed == Corner.CENTER && oldMousePosition.x > -1 && oldMousePosition.y > -1)
		{
			PVector deltaP = changeInPosition();
			snapTo();
			
			
		}
				
		oldMousePosition.x = parent.mouseX;
		oldMousePosition.y = parent.mouseY;
	}
		
	void changeInPosition()
	{
		float deltaX = parent.mouseX - oldMousePosition.x;
		float deltaY = parent.mouseY - oldMousePosition.y;
		
		position.x += deltaX;
		position.y += deltaY;
	}
	
	PVector changeInMouse()
	{
		float deltaX;
		
		return null;
	}
	
	void snapTo()
	{
		int i = (int)(position.x / grid.cellWidth);
		int j = (int)(position.y / grid.cellHeight);
						
		position.x = grid.grid[i][j].x;
		position.y = grid.grid[i][j].y;
	}
}
